JACK is a low-latency audio server, written primarily for Linux. It can
connect a number of different applications to an audio device, as well
as allow them to share audio among themselves.  Its clients can run in
their own processes (ie. as a normal application) or they can run within
a JACK server instance (i.e. as a "plugin").

Jack uses /dev/shm as a temporary directory for its processes; this is a
relatively new change, as it used to use  /mnt/ramfs. You may pass an
alternate location as JACKTMP when executing the script. For example:
	JACKTMP=/mnt/tmp jack-audio-connection-kit.SlackBuild
Assuming you use the default /dev/shm as temporary directory, be sure you
have an appropriate line in /etc/fstab to mount it:
	tmpfs		/dev/shm	tmpfs	defaults	0 0
If you don't accept the script's default, you'll need to have the appropriate
mountpoint set up in fstab and mounted, but a discussion of how to do that
is outside the scope of this document.

jackd has to run with realtime priviledges. One way to do this on Slamd64 would
be to use set_rlimits. Since 12.2 there's another way, though experimental. If
you have a filesystem that supports posix capabilities (reiserfs does not), you
can grant jackd the rights to run in realtime mode, even when started as normal user
with the following command:

  setcap cap_sys_nice=ep /usr/bin/jackd

jack optionally uses libsndfile which is also available at builds.slamd64.com.
