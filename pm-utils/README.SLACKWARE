README.SLACKWARE
20081116 - rworkman@slackware.com

===============================================================================
PLEASE READ THIS ENTIRE FILE BEFORE REPORTING PROBLEMS OR ASKING FOR HELP!
===============================================================================

One of these routines should tell you whether any of the operations
are supported by your current kernel/userspace at all:

  for i in hibernate suspend suspend-hybrid ; do
    pm-is-supported --$i \
      && echo "$i is supported" \
      || echo "$i is not supported" ;
  done

  *OR*

  cat /sys/power/state

Assuming they are supported, running "pm-suspend" as root should do a suspend
to ram, and "pm-hibernate" should suspend to disk. Note that you must have a 
swap partition (or file, but partition is easier) which is large enough 
(2x ram is good here) and the relevant initrd lines and such for this to work. 
If you're not familiar with all of that, don't test pm-hibernate.
I don't have hardware which supports suspend-hybrid, so I have no idea if/how
it works at all.

Here's the short version of using suspend to disk:

Stanza in /etc/lilo.conf should look something like this:
  image = /boot/vmlinuz-generic-smp-2.6.26.6-smp
    initrd = /boot/initrd.gz
    append = "resume=/dev/hda2"
    root = /dev/hda1
    label = Slackware
    read-only

/etc/mkinitrd.conf should look something like this:
  MODULE_LIST="jfs"
  ROOTDEV="/dev/hda1"
  ROOTFS="jfs"
  RESUMEDEV="/dev/hda2"

mkinitrd command invocation would be this:
  mkinitrd -c -k 2.6.26.6-smp -F

All of the above assumes at least a cursory understanding of what those
commands and parameters do. If it's not clear, don't attempt it on a
system that you can't easily reinstall without concern.

==============================================================================

If it works for you, and/or you want to automate it a bit, you'll find
some sample acpi event declarations and scripts here:
  http://rlworkman.net/conf/acpi/
A better option is to use a power manager daemon, but unless you happen to be
running gnome or one of the pre-release xfce-4.6 builds, that's not an option.
I'm not sure whether kde's klaptop supports pm-utils or not, so feedback in
this area is encouraged.

==============================================================================

If it doesn't work by default for you, consider having a look at
  http://people.freedesktop.org/~hughsient/quirk/quirk-suspend-index.html
for some debugging hints.  Pay particular attention to this page:
  http://people.freedesktop.org/~hughsient/quirk/quirk-suspend-try.html
If you are able to get your machine to suspend/resume correctly by passing
additional quirks on the command line, then I would like to know about it so
that upstream hal-info can get the correct information to use.  Please email
the make/model and other relevant information about your machine along with
the full output of "lshal" and "lspci" attached, and what extra quirks you
needed to add for successful suspend/resume to rworkman@slackware.com

==============================================================================

If you need the system to do certain operations before going to sleep and
then undo them (or perhaps do something new) when waking back up, pm-utils
supports something called "hooks."  The hooks installed by packages (not only
pm-utils itself) should be in /usr/lib64/pm-utils/sleep.d/, while any hooks 
installed by the local system administrator (e.g. things that are only an
issue on that one machine) should be in /etc/pm/sleep.d/.

Looking at some of the existing hooks should give you a decent idea of their
capabilities; as a head start, the functions used in the hooks are declared 
in /usr/lib64/pm-utils/functions, which is inherited elsewhere by 
/usr/lib64/pm-utils/pm-functions

One way to contribute to pm-utils indirectly is by writing and sending any
needed hooks scripts to upstream projects; as an example, the hook that 
ships with wicd was contributed by me.  Ideally, the pm-utils package should
have a very minimum number of hooks shipped with it, as they should ship with
the package to which the hook pertains.  For example, the grub package would 
ship a hook for grub, the ntp package would ship a hook for ntpd, etcetera.

==============================================================================

KNOWN BUGS

The "50ntpd" hook sometimes causes the suspend/hibernate operation to fail,
seemingly due to failure to acquire a lock.  I personally haven't been able
to figure out why, as the code itself looks fine, so help is appreciated :-)
A workaround is to remove the executable attribute from that hook.

Sometimes the suspend or resume process fails (I've been unable to trace the
exact reason why), and a stale lock file is left behind, which causes later
attempts to suspend/hibernate to fail.  If this occurs, you will likely need
to remove /var/run/pm-utils/locks/pm-suspend.lock before it works properly
again.

==============================================================================

